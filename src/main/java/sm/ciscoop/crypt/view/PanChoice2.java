/*
 * PanChoice.java
 *
 * Created on __DATE__, __TIME__
 */

package sm.ciscoop.crypt.view;

import java.awt.Cursor;
import java.util.List;

import sm.ciscoop.crypt.primi.PrimiFactory;
import sm.ciscoop.crypt.rsa.RsaObj;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;

public class PanChoice2 extends javax.swing.JPanel implements IRsa {

  /** long serialVersionUID */
  private static final long serialVersionUID = 8680719853535664281L;
  private IRsa   m_irsa;
  private RsaObj rsa;
  Long           m_lP, m_lQ, m_lPQ;

  /** Creates new form PanChoice */
  public PanChoice2() {
    initComponents();
    miaInit();
  }

  private void miaInit() {
    setRsa(new RsaObj());
    cbP.setIrsa(this);
    cbQ.setIrsa(this);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // GEN-BEGIN:initComponents
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    panBottoni = new javax.swing.JPanel();
    GridBagLayout gbl_panBottoni = new GridBagLayout();
    gbl_panBottoni.columnWidths = new int[]{90, 100, 90, 67, 0};
    gbl_panBottoni.rowHeights = new int[]{34, 50, 34, 0};
    gbl_panBottoni.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
    gbl_panBottoni.rowWeights = new double[]{0.0, 0.0, 0.0, Double.MIN_VALUE};
    panBottoni.setLayout(gbl_panBottoni);
    txMinPrimo = new sm.ciscoop.crypt.view.Ctx();
    
        txMinPrimo.setLabel("Min Primo");
        GridBagConstraints gbc_txMinPrimo = new GridBagConstraints();
        gbc_txMinPrimo.anchor = GridBagConstraints.NORTH;
        gbc_txMinPrimo.fill = GridBagConstraints.HORIZONTAL;
        gbc_txMinPrimo.insets = new Insets(0, 0, 5, 5);
        gbc_txMinPrimo.gridx = 0;
        gbc_txMinPrimo.gridy = 0;
        panBottoni.add(txMinPrimo, gbc_txMinPrimo);
    txQtaPrimi = new sm.ciscoop.crypt.view.Ctx();
    
        txQtaPrimi.setLabel("Qta Primi");
        GridBagConstraints gbc_txQtaPrimi = new GridBagConstraints();
        gbc_txQtaPrimi.anchor = GridBagConstraints.NORTH;
        gbc_txQtaPrimi.fill = GridBagConstraints.HORIZONTAL;
        gbc_txQtaPrimi.insets = new Insets(0, 0, 5, 5);
        gbc_txQtaPrimi.gridx = 1;
        gbc_txQtaPrimi.gridy = 0;
        panBottoni.add(txQtaPrimi, gbc_txQtaPrimi);
    txMaxPrimo = new sm.ciscoop.crypt.view.Ctx();
    
        txMaxPrimo.setLabel("Max Primo");
        GridBagConstraints gbc_txMaxPrimo = new GridBagConstraints();
        gbc_txMaxPrimo.anchor = GridBagConstraints.NORTH;
        gbc_txMaxPrimo.fill = GridBagConstraints.HORIZONTAL;
        gbc_txMaxPrimo.insets = new Insets(0, 0, 5, 5);
        gbc_txMaxPrimo.gridx = 2;
        gbc_txMaxPrimo.gridy = 0;
        panBottoni.add(txMaxPrimo, gbc_txMaxPrimo);
    btGenPrimi = new javax.swing.JButton();
    
        btGenPrimi.setText("Primi");
        btGenPrimi.addActionListener(new java.awt.event.ActionListener() {
          @Override
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            btGenPrimiActionPerformed(evt);
          }
        });
        GridBagConstraints gbc_btGenPrimi = new GridBagConstraints();
        gbc_btGenPrimi.anchor = GridBagConstraints.SOUTHWEST;
        gbc_btGenPrimi.insets = new Insets(0, 0, 5, 0);
        gbc_btGenPrimi.gridx = 3;
        gbc_btGenPrimi.gridy = 0;
        panBottoni.add(btGenPrimi, gbc_btGenPrimi);
    cbP = new sm.ciscoop.crypt.view.Cbx();
    
        cbP.setLabel("Val P");
        cbP.setName("P");
        GridBagConstraints gbc_cbP = new GridBagConstraints();
        gbc_cbP.anchor = GridBagConstraints.NORTH;
        gbc_cbP.fill = GridBagConstraints.HORIZONTAL;
        gbc_cbP.insets = new Insets(0, 0, 5, 5);
        gbc_cbP.gridx = 0;
        gbc_cbP.gridy = 1;
        panBottoni.add(cbP, gbc_cbP);
    cbQ = new sm.ciscoop.crypt.view.Cbx();
    
        cbQ.setLabel("Val Q");
        cbQ.setName("Q");
        GridBagConstraints gbc_cbQ = new GridBagConstraints();
        gbc_cbQ.anchor = GridBagConstraints.NORTH;
        gbc_cbQ.fill = GridBagConstraints.HORIZONTAL;
        gbc_cbQ.insets = new Insets(0, 0, 5, 5);
        gbc_cbQ.gridx = 1;
        gbc_cbQ.gridy = 1;
        panBottoni.add(cbQ, gbc_cbQ);
    txPQ = new sm.ciscoop.crypt.view.Ctx();
    
        txPQ.setLabel("PQ");
        GridBagConstraints gbc_txPQ = new GridBagConstraints();
        gbc_txPQ.anchor = GridBagConstraints.SOUTH;
        gbc_txPQ.fill = GridBagConstraints.HORIZONTAL;
        gbc_txPQ.insets = new Insets(0, 0, 5, 5);
        gbc_txPQ.gridx = 2;
        gbc_txPQ.gridy = 1;
        panBottoni.add(txPQ, gbc_txPQ);
    txE = new sm.ciscoop.crypt.view.Ctx();
    
        txE.setLabel("Val E");
        GridBagConstraints gbc_txE = new GridBagConstraints();
        gbc_txE.anchor = GridBagConstraints.NORTH;
        gbc_txE.fill = GridBagConstraints.HORIZONTAL;
        gbc_txE.insets = new Insets(0, 0, 0, 5);
        gbc_txE.gridx = 0;
        gbc_txE.gridy = 2;
        panBottoni.add(txE, gbc_txE);
    txD = new sm.ciscoop.crypt.view.Ctx();
    
        txD.setLabel("Val D");
        GridBagConstraints gbc_txD = new GridBagConstraints();
        gbc_txD.anchor = GridBagConstraints.NORTH;
        gbc_txD.fill = GridBagConstraints.HORIZONTAL;
        gbc_txD.insets = new Insets(0, 0, 0, 5);
        gbc_txD.gridx = 1;
        gbc_txD.gridy = 2;
        panBottoni.add(txD, gbc_txD);
    txProbes = new sm.ciscoop.crypt.view.Ctx();
    
        txProbes.setLabel("Probes");
        GridBagConstraints gbc_txProbes = new GridBagConstraints();
        gbc_txProbes.anchor = GridBagConstraints.NORTH;
        gbc_txProbes.fill = GridBagConstraints.HORIZONTAL;
        gbc_txProbes.insets = new Insets(0, 0, 0, 5);
        gbc_txProbes.gridx = 2;
        gbc_txProbes.gridy = 2;
        panBottoni.add(txProbes, gbc_txProbes);
    jButton1 = new javax.swing.JButton();
    
        jButton1.setText("Calcola");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
          @Override
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
          }
        });
        GridBagConstraints gbc_jButton1 = new GridBagConstraints();
        gbc_jButton1.anchor = GridBagConstraints.SOUTHWEST;
        gbc_jButton1.gridx = 3;
        gbc_jButton1.gridy = 2;
        panBottoni.add(jButton1, gbc_jButton1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(panBottoni,
        javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE));
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(panBottoni,
        javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE));
  }// </editor-fold>

  // GEN-END:initComponents

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
  }

  private void btGenPrimiActionPerformed(java.awt.event.ActionEvent evt) {
    PrimiFactory pf = getRsa().getPrimiFactory();
    Long min = txMinPrimo.getVal();
    Long qta = txQtaPrimi.getVal();
    Long max = txMaxPrimo.getVal();
    if ( (qta == null || qta.longValue() == 0) && (max == null || max.longValue() == 0))
      return;

    if (qta.longValue() > 4 && min == 0)
      pf.buildPrimi(qta.intValue());
    else if (min > 2)
      pf.buildPrimi(min, qta);
    else
      pf.buildPrimi(qta.intValue());
    List<Long> ls = pf.getList();
    cbP.setLista(ls);
    cbQ.setLista(ls);
  }

  /**
   * @param args
   *          the command line arguments
   */
  // public static void main(String args[]) {
  // java.awt.EventQueue.invokeLater(new Runnable() {
  // public void run() {
  // PanChoice dialog = new PanChoice(new javax.swing.JFrame(), true);
  // dialog.addWindowListener(new java.awt.event.WindowAdapter() {
  // public void windowClosing(java.awt.event.WindowEvent e) {
  // System.exit(0);
  // }
  // });
  // dialog.setVisible(true);
  // }
  // });
  // }

  // GEN-BEGIN:variables
  // Variables declaration - do not modify
  private javax.swing.JButton       btGenPrimi;
  private sm.ciscoop.crypt.view.Cbx cbP;
  private sm.ciscoop.crypt.view.Cbx cbQ;
  private javax.swing.JButton       jButton1;
  private javax.swing.JPanel        panBottoni;
  private sm.ciscoop.crypt.view.Ctx txD;
  private sm.ciscoop.crypt.view.Ctx txE;
  private sm.ciscoop.crypt.view.Ctx txMaxPrimo;
  private sm.ciscoop.crypt.view.Ctx txMinPrimo;
  private sm.ciscoop.crypt.view.Ctx txPQ;
  private sm.ciscoop.crypt.view.Ctx txProbes;
  private sm.ciscoop.crypt.view.Ctx txQtaPrimi;

  // End of variables declaration//GEN-END:variables

  @Override
  public boolean setValue(String id, Long lv) {
    if (id == null)
      return false;

    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    System.out.println(String.format("setVal[%s]=%d", id, lv));

    try {
      if (id.equals(cbP.getName()))
        m_lP = lv;
      if (id.equals(cbQ.getName()))
        m_lQ = lv;
      if (m_lP != null && m_lQ != null) {
        getRsa().setP(m_lP);
        getRsa().setQ(m_lQ);
      }
      txPQ.setVal(getRsa().getPQ());
      txE.setVal(getRsa().getE());
      txD.setVal(getRsa().getD());
      txProbes.setVal(getRsa().getProbes());
      if (m_irsa != null)
        m_irsa.setValue(id, lv);
    } finally {
      setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }
    return false;
  }

  /**
   * @param rsa
   *          the rsa to set
   */
  public void setRsa(RsaObj rsa) {
    this.rsa = rsa;
  }

  /**
   * @return the rsa
   */
  public RsaObj getRsa() {
    return rsa;
  }

  public void setIrsa(IRsa m_irsa) {
    this.m_irsa = m_irsa;
  }

  public IRsa getIrsa() {
    return m_irsa;
  }

  // @Override
  // public boolean setP(Long pP) {
  // m_lP = pP;
  // if (m_lQ != null)
  // m_lPQ = Long.valueOf(m_lP.longValue() * m_lQ.longValue());
  // txPQ.setVal(m_lPQ);
  // return false;
  // }
  //
  // @Override
  // public boolean setQ(Long pQ) {
  // m_lQ = pQ;
  // if (m_lP != null)
  // m_lPQ = Long.valueOf(m_lP.longValue() * m_lQ.longValue());
  // txPQ.setVal(m_lPQ);
  // return false;
  // }

}
