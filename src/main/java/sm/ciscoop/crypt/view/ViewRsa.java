/*
 * ViewRsa.java
 *
 * Created on __DATE__, __TIME__
 */

package sm.ciscoop.crypt.view;

import java.awt.BorderLayout;
import java.util.List;
import java.util.Properties;

import sm.ciscoop.crypt.rsa.CodeFrase;
import sm.ciscoop.crypt.rsa.RsaObj;
import sm.ciscoop.crypt.view.WindowState.IWinState;

/**
 *
 * @author __USER__
 */
public class ViewRsa extends javax.swing.JFrame implements IRsa, IWinState {
  private static final String SPLT_CLEADIVL    = "SPLT_CLEADIVL";
  private static final String SPLT_KRYDIVL     = "SPLT_KRYDIVL";
  private static final long   serialVersionUID = -700561943912558542L;
  PanChoice                   panCh;
  CodeFrase                   m_codf;
  WindowState                 m_winst;

  /** Creates new form ViewRsa */
  public ViewRsa() {
    initComponents();
    miaInit();
  }

  private void miaInit() {
    m_winst = new WindowState(this);
    panCh = new PanChoice();
    panButt.add(panCh, BorderLayout.NORTH);
    panCh.setIrsa(this);

    txEncPQ.setVal(22086991L);
    txEncPQ1.setVal(22086991L);
    txEncE.setVal(11038493L);
    txEncD.setVal(14192357L);

    // pack();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  //GEN-BEGIN:initComponents
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    panButt = new javax.swing.JPanel();
    spltClear = new javax.swing.JSplitPane();
    splKriDeco = new javax.swing.JSplitPane();
    panKript = new javax.swing.JPanel();
    panKriptBt = new javax.swing.JPanel();
    txEncPQ1 = new sm.ciscoop.crypt.view.Ctx();
    txEncD = new sm.ciscoop.crypt.view.Ctx();
    btEncode1 = new javax.swing.JButton();
    scrlKript = new javax.swing.JScrollPane();
    txKript = new javax.swing.JTextPane();
    panClear1 = new javax.swing.JPanel();
    scrlClearDeco = new javax.swing.JScrollPane();
    txClearDeco = new javax.swing.JTextPane();
    panClear = new javax.swing.JPanel();
    scrlClear = new javax.swing.JScrollPane();
    txClear = new javax.swing.JTextPane();
    panClearBt = new javax.swing.JPanel();
    txEncPQ = new sm.ciscoop.crypt.view.Ctx();
    txEncE = new sm.ciscoop.crypt.view.Ctx();
    btEncode = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51), 0));
    jPanel1.setLayout(new java.awt.BorderLayout());

    panButt.setMinimumSize(new java.awt.Dimension(30, 100));
    panButt.setPreferredSize(new java.awt.Dimension(410, 140));
    panButt.setVerifyInputWhenFocusTarget(false);
    panButt.setLayout(new java.awt.BorderLayout());
    jPanel1.add(panButt, java.awt.BorderLayout.NORTH);

    spltClear.setDividerLocation(150);
    spltClear.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

    splKriDeco.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

    panKript.setLayout(new java.awt.BorderLayout());

    panKriptBt.setRequestFocusEnabled(false);
    panKriptBt.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    txEncPQ1.setLabel("PQ");
    txEncPQ1.setPreferredSize(new java.awt.Dimension(80, 38));
    panKriptBt.add(txEncPQ1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

    txEncD.setLabel("D");
    txEncD.setPreferredSize(new java.awt.Dimension(80, 38));
    panKriptBt.add(txEncD, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

    btEncode1.setText("Decode");
    btEncode1.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btEncode1ActionPerformed(evt);
      }
    });
    panKriptBt.add(btEncode1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

    panKript.add(panKriptBt, java.awt.BorderLayout.EAST);

    txKript.setFont(new java.awt.Font("Courier New", 0, 12));
    txKript.setText(
        "BAFGNfYDC6qFBAE8DsMEARLc8gQBCvhiAwLlmgQAggBPA3Af1QM/E7cEAOnE2QMCrXEEAT2iWgMq\nnWwEASN5wAQA0G4rBAD/DyEDQ/KvBADEPJIDdTVTBACghwoEAT+JhgQBP4mGBAFD+KAEAIvONgQB\nDig9BACAP8wEAMUj7gQBBGXJAwYK0gQA6U4pA2PDpgQAlOEdBADTrrMEAK5k0QQBDIOYBAENXWgE\nAMh0XQQAiTseBACXUIUDHaJXBAEjecAEAU7rkwNUxVkDd8vlAwtmzQMhUSIDVMVZBAEkmPUEANdc\nWwQA4tB2BACoZfoEAKTsjQQAoVtWA0E1ywQA3XK1BAEjecAEAUqeNQQA+hUtBACuZNEEASN5wAQA\n5qzrBAEdtnQEAR05RAMgTGwEAT26tAJDSQQA2aGYBAES3PIEAK7NVAQBScAEBAEFXtcDWYW6A09u\n8ANY3y0EAMGXYQM/E7cEAOnE2QNFIUEEAUqeNQQBGdSZBACeuoEEAOSMqQQBKqdIAyzYGQNFgukE\nASH8dAQAqEmZBACfLcUDHXS2A0PAGwQAoOZ4BACeuoEDdVGxBACQXJkEAJmU/wQBHtT+A3J0CAQA\nhygTBACC7t4EATqjtAMLZs0EAUqeNQNdicgDIFvUAytXQQNgoGQEAOYa8gQBI3nABAEduEkEAKCH\nCgMkiigEAIAHvAMuUzsDUwb5AytuZQQAy/JTBACIlrkEAJ1luAQBH0HzAy4w0QM8A7cDBqF4BAED\nmDAEAOz/rwQBPN8/BAEc328DN5r9A3bTAQQAjwbdBADhvbkDZRi9BAEwG3cEAThEcQQApLNLBADc\nCK4EAPexOgQBPFouAwLlmgQA390FA2dAuAMP+zYEAUASEgMgTGwEAP6bZgN3SJgEALmncAQBSuwE\nBACLaEEEAJ22SQM1ZvIEASN5wANPbvADWN8tBADBl2EEAJeDswMU45sEAN/dBQQAkzslBAEcgLQE\nAOdoiQQAoOZ4AwLlmgQBRZ+XBAC4fxEEAOSMqQQAlaPsBAEJvQ0EAT+JhgQBQ/igBACLzjYDBgrS\nBADpTikDY8OmA3U1UwQBEby6BACg5ngEARLc8gMMxSoDGyMFBAFK8j8DBskvBAEbQ0sDXJ46AwjY\npgQBDXiCA0XsyAQArjNXAxt36AQBILSFBACibKIDQTaDAx8KGgQA1bLsBACibKIDCR/KBACO8iAE\nAJvHBQMEJy4EAIIATwQAsf1KBAEh8woDArfVBAEoycgEARzS6wQBSp41BACFNCwDN5r9BAD1nwEE\nAK6caQQA1MJlA3dImAQA9x2sBAC16PoDCW1+A2aupwQBHnSBBADr0FUEATPpcgQAhkD+BAD6RgYE\nAQzDigMlCTIDPjduBACmAwwEAMWRnwNY3y0EAMzOtwQBKqdIBAFO65MDBskvA15CgAQBNQAnAwK3\n1QNHyAADArfVA16WywM0CmkDGyMFBAFK8j8DFtGXAyTXAgQA3xzdBAD1nwEEALX3HgQBMdK7Awdl\nEAQArTWpA1gqGQNFgukDSbwkBADkjKkEAJWj7AMJbX4DZq6nBAEedIEDBskvBAEbQ0sEAI+bnQMO\nnqQDEr7hBAEokfEEARFFFAMLZs0DGLiBA09u8ANY3y0EAIvONgQA2AcpBADoZzkEALvAhgQBBIUw\nBAFGNMMEAPzhmQ==");
    scrlKript.setViewportView(txKript);

    panKript.add(scrlKript, java.awt.BorderLayout.CENTER);

    splKriDeco.setLeftComponent(panKript);

    panClear1.setLayout(new java.awt.BorderLayout());

    txClearDeco.setText("Tanto va la gatta");
    scrlClearDeco.setViewportView(txClearDeco);

    panClear1.add(scrlClearDeco, java.awt.BorderLayout.CENTER);

    splKriDeco.setRightComponent(panClear1);

    spltClear.setBottomComponent(splKriDeco);

    panClear.setLayout(new java.awt.BorderLayout());

    txClear.setText(
        "Lascia lente le briglie del tuo ippogrifo, o Astolfo, \ne sfrena il tuo volo dove pi\u00f9 ferve l'opera dell'uomo. \nPer\u00f2 non ingannarmi con false immagini \nma lascia che io veda la verit\u00e0 e possa poi toccare il giusto.\nDa qui, messere, si domina la valle ci\u00f2 che si vede, \u00e8.\nMa se l'imago \u00e8 scarna al vostro occhio \nscendiamo a rimirarla da pi\u00f9 in basso \ne planeremo in un galoppo alato\nentro il cratere ove gorgoglia il tempo.");
    scrlClear.setViewportView(txClear);

    panClear.add(scrlClear, java.awt.BorderLayout.CENTER);

    panClearBt.setRequestFocusEnabled(false);
    panClearBt.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    txEncPQ.setLabel("PQ");
    txEncPQ.setPreferredSize(new java.awt.Dimension(80, 38));
    panClearBt.add(txEncPQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

    txEncE.setLabel("E");
    txEncE.setPreferredSize(new java.awt.Dimension(80, 38));
    panClearBt.add(txEncE, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

    btEncode.setText("Encode");
    btEncode.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btEncodeActionPerformed(evt);
      }
    });
    panClearBt.add(btEncode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

    panClear.add(panClearBt, java.awt.BorderLayout.EAST);

    spltClear.setLeftComponent(panClear);

    jPanel1.add(spltClear, java.awt.BorderLayout.CENTER);

    getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>
   //GEN-END:initComponents

  private void btEncode1ActionPerformed(java.awt.event.ActionEvent evt) {
    RsaObj rsa = panCh.getRsa();
    rsa.setPQ(txEncPQ.getVal());
    rsa.setPQ(txEncPQ1.getVal());
    rsa.setE(txEncE.getVal());
    rsa.setD(txEncD.getVal());
    String sz = txKript.getText();
    m_codf = new CodeFrase(rsa.getPQ());

    List<Long> vec = m_codf.decode(sz);
    List<Long> vec2 = rsa.decode(vec);
    sz = m_codf.decode(vec2);
    txClearDeco.setText(sz);

  }

  private void btEncodeActionPerformed(java.awt.event.ActionEvent evt) {
    RsaObj rsa = panCh.getRsa();
    String sz = txClear.getText();
    m_codf = new CodeFrase(rsa.getPQ());

    List<Long> vec = m_codf.encode(sz);
    List<Long> vec2 = rsa.encode(vec);
    sz = m_codf.encode(vec2);
    StringBuffer sb = new StringBuffer();
    while ( sz.length() > 64) {
      sb.append(sz.substring(0,64)).append("\n");
      sz = sz.substring(64);
    }
    sb.append(sz);
    txKript.setText(sb.toString());
  }

  /**
   * @param args
   *          the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        new ViewRsa().setVisible(true);
      }
    });
  }

  //GEN-BEGIN:variables
  // Variables declaration - do not modify
  private javax.swing.JButton       btEncode;
  private javax.swing.JButton       btEncode1;
  private javax.swing.JPanel        jPanel1;
  private javax.swing.JPanel        panButt;
  private javax.swing.JPanel        panClear;
  private javax.swing.JPanel        panClear1;
  private javax.swing.JPanel        panClearBt;
  private javax.swing.JPanel        panKript;
  private javax.swing.JPanel        panKriptBt;
  private javax.swing.JScrollPane   scrlClear;
  private javax.swing.JScrollPane   scrlClearDeco;
  private javax.swing.JScrollPane   scrlKript;
  private javax.swing.JSplitPane    splKriDeco;
  private javax.swing.JSplitPane    spltClear;
  private javax.swing.JTextPane     txClear;
  private javax.swing.JTextPane     txClearDeco;
  private sm.ciscoop.crypt.view.Ctx txEncD;
  private sm.ciscoop.crypt.view.Ctx txEncE;
  private sm.ciscoop.crypt.view.Ctx txEncPQ;
  private sm.ciscoop.crypt.view.Ctx txEncPQ1;
  private javax.swing.JTextPane     txKript;

  // End of variables declaration//GEN-END:variables

  @Override
  public boolean setValue(String id, Long lv) {
    RsaObj rsa = panCh.getRsa();
    if (rsa == null)
      return false;
    if (rsa.getD() == null)
      return false;
    txEncE.setVal(rsa.getE());
    txEncD.setVal(rsa.getD());
    txEncPQ.setVal(rsa.getPQ());
    txEncPQ1.setVal(rsa.getPQ());
    return false;
  }

  @Override
  public void chiudi() {
    // TODO Auto-generated method stub

  }

  @Override
  public void readProperties(Properties prop) {
    int n;
    String sz;
    try {
      sz = prop.getProperty(SPLT_CLEADIVL);
      n = Integer.valueOf(sz).intValue();
      spltClear.setDividerLocation(n);
    } catch (NumberFormatException e) {
    }
    try {
      sz = prop.getProperty(SPLT_KRYDIVL);
      n = Integer.valueOf(sz).intValue();
      splKriDeco.setDividerLocation(n);
    } catch (NumberFormatException e) {
    }
  }

  @Override
  public void saveProperties(Properties prop) {
    int n = splKriDeco.getDividerLocation();
    prop.setProperty(SPLT_KRYDIVL, String.valueOf(n));
    n = spltClear.getDividerLocation();
    prop.setProperty(SPLT_CLEADIVL, String.valueOf(n));
  }

}
